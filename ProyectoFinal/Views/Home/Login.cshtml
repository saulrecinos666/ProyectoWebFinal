@{
    ViewData["Title"] = "Iniciar Sesión";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-4">
            <div class="card shadow-sm">
                <div class="card-header text-center bg-primary text-white">
                    <h3>Iniciar Sesión</h3>
                </div>
                <div class="card-body">
                    <form id="loginForm">
                        <div class="mb-3">
                            <label for="username" class="form-label">Usuario:</label>
                            <input type="text" id="username" name="username" class="form-control" required placeholder="Ingresa tu usuario">
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Contraseña:</label>
                            <input type="password" id="password" name="password" class="form-control" required placeholder="Ingresa tu contraseña">
                        </div>
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-success btn-lg">Entrar</button>
                        </div>
                        <div id="loginMessage" class="mt-3 text-center text-danger"></div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (async function () {
            const loginForm = document.getElementById('loginForm');
            const usernameInput = document.getElementById('username');
            const passwordInput = document.getElementById('password');
            const loginMessage = document.getElementById('loginMessage');

            loginForm.addEventListener('submit', async function (event) {
                event.preventDefault();

                loginMessage.textContent = '';
                loginMessage.classList.remove('text-success', 'text-danger');

                const username = usernameInput.value.trim();
                const password = passwordInput.value.trim();

                if (!username || !password) {
                    loginMessage.textContent = 'Por favor, ingresa usuario y contraseña.';
                    loginMessage.classList.add('text-danger');
                    return;
                }

                try {
                    const response = await fetch('http://192.168.1.31:5278/api/auth/login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ username: username, password: password })
                    });

                    const data = await response.json();

                    if (response.ok) {
                        localStorage.setItem('jwtToken', data.token); 
                        loginMessage.textContent = data.Message || 'Inicio de sesión exitoso. Redirigiendo...';
                        loginMessage.classList.add('text-success');
                        window.location.href = '/Chat';
                    } else {
                        loginMessage.textContent = data.Messagge || 'Error al iniciar sesión. Credenciales incorrectas.';
                        loginMessage.classList.add('text-danger');
                    }
                } catch (error) {
                    console.error('Error de red o del servidor:', error);
                    loginMessage.textContent = 'Ocurrió un error al intentar iniciar sesión. Intenta de nuevo.';
                    loginMessage.classList.add('text-danger');
                }
            });
        })();
    </script>
}